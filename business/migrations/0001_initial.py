# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-12 19:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChannelAmounts',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Channel Amount Item',
                'verbose_name_plural': 'Channels Amounts Items',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('print_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='print_name')),
                ('iso2', models.CharField(blank=True, max_length=255, null=True, verbose_name='ISO 2')),
                ('iso3', models.CharField(blank=True, max_length=255, null=True, verbose_name='ISO 3')),
                ('country_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Country Code')),
                ('region', models.CharField(blank=True, max_length=255, null=True, verbose_name='region')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='CountryCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=5, null=True, verbose_name='Code')),
                ('symbol', models.CharField(blank=True, max_length=10, null=True, verbose_name='Symbol')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Name')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('status_operator', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('status_payment', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=300, null=True, verbose_name='Description')),
                ('status_method', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='PinlessAmounts',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pinless Amount Group',
                'verbose_name_plural': 'Pinless Amounts Groups',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=300, null=True, verbose_name='Description')),
                ('status_service', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=600, null=True, verbose_name='Description')),
                ('session_id', models.TextField(max_length=600, verbose_name='Session')),
                ('user_agent_id', models.TextField(max_length=600, verbose_name='User Agent Id')),
                ('request', models.TextField(blank=True, max_length=600, null=True, verbose_name='Request')),
                ('response', models.TextField(blank=True, max_length=600, null=True, verbose_name='Response')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_code', models.CharField(max_length=20, unique=True, verbose_name='Transaction Code')),
                ('next_transaction_date', models.DateTimeField()),
                ('next_unit_day', models.PositiveIntegerField(default=15, verbose_name='Next Unit Day')),
                ('status_transaction', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('transaction_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='business.Transaction')),
                ('destination_amount', models.FloatField(verbose_name='Destination amount')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Phone number')),
                ('description', models.TextField(blank=True, max_length=600, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='transaction',
            name='payment_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_payment_id', to='business.Payment'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='related_transaction_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_related_id', to='business.Transaction'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_service_id', to='business.Service'),
        ),
        migrations.AddField(
            model_name='systemlog',
            name='transaction_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='system_transaction_id', to='business.Transaction'),
        ),
    ]
